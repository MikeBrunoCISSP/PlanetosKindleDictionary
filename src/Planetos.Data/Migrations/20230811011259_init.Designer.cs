// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planetos.Data;

#nullable disable

namespace Planetos.Data.Migrations
{
    [DbContext(typeof(PlanetosContext))]
    [Migration("20230811011259_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Planetos.Data.Models.DictionaryIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DictionaryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Indices");
                });

            modelBuilder.Entity("Planetos.Data.Models.Inflection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InflectionGroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsExactMatch")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InflectionGroupId");

                    b.ToTable("Inflections");
                });

            modelBuilder.Entity("Planetos.Data.Models.InflectionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WordDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordDefinitionId");

                    b.ToTable("InflectionGroups");
                });

            modelBuilder.Entity("Planetos.Data.Models.WordDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DictionaryIndexId")
                        .HasColumnType("int");

                    b.Property<int>("IndexId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DictionaryIndexId");

                    b.ToTable("WordDefinitions");
                });

            modelBuilder.Entity("Planetos.Data.Models.Inflection", b =>
                {
                    b.HasOne("Planetos.Data.Models.InflectionGroup", null)
                        .WithMany("Inflections")
                        .HasForeignKey("InflectionGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Planetos.Data.Models.InflectionGroup", b =>
                {
                    b.HasOne("Planetos.Data.Models.WordDefinition", null)
                        .WithMany("InflectionGroups")
                        .HasForeignKey("WordDefinitionId");
                });

            modelBuilder.Entity("Planetos.Data.Models.WordDefinition", b =>
                {
                    b.HasOne("Planetos.Data.Models.DictionaryIndex", null)
                        .WithMany("WordDefinitions")
                        .HasForeignKey("DictionaryIndexId");
                });

            modelBuilder.Entity("Planetos.Data.Models.DictionaryIndex", b =>
                {
                    b.Navigation("WordDefinitions");
                });

            modelBuilder.Entity("Planetos.Data.Models.InflectionGroup", b =>
                {
                    b.Navigation("Inflections");
                });

            modelBuilder.Entity("Planetos.Data.Models.WordDefinition", b =>
                {
                    b.Navigation("InflectionGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
