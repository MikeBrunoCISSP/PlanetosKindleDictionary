// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planetos.Data;

#nullable disable

namespace Planetos.Data.Migrations
{
    [DbContext(typeof(PlanetosContext))]
    [Migration("20231108220935_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Planetos.Data.Models.Inflection", b =>
                {
                    b.Property<int>("inflectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("inflectionId"));

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isExactMatch")
                        .HasColumnType("bit");

                    b.Property<DateTime>("lastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("wordDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("inflectionId");

                    b.HasIndex("wordDefinitionId");

                    b.ToTable("inflections");
                });

            modelBuilder.Entity("Planetos.Data.Models.KindleIndex", b =>
                {
                    b.Property<int>("kindleIndexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("kindleIndexId"));

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("lastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("kindleIndexId");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("indices");

                    b.HasData(
                        new
                        {
                            kindleIndexId = 1,
                            dateCreated = new DateTime(2023, 11, 8, 22, 9, 35, 641, DateTimeKind.Utc).AddTicks(2585),
                            lastUpdated = new DateTime(2023, 11, 8, 22, 9, 35, 641, DateTimeKind.Utc).AddTicks(2585),
                            name = "Characters"
                        },
                        new
                        {
                            kindleIndexId = 2,
                            dateCreated = new DateTime(2023, 11, 8, 22, 9, 35, 641, DateTimeKind.Utc).AddTicks(2589),
                            lastUpdated = new DateTime(2023, 11, 8, 22, 9, 35, 641, DateTimeKind.Utc).AddTicks(2589),
                            name = "Locations"
                        },
                        new
                        {
                            kindleIndexId = 3,
                            dateCreated = new DateTime(2023, 11, 8, 22, 9, 35, 641, DateTimeKind.Utc).AddTicks(2593),
                            lastUpdated = new DateTime(2023, 11, 8, 22, 9, 35, 641, DateTimeKind.Utc).AddTicks(2593),
                            name = "Houses"
                        },
                        new
                        {
                            kindleIndexId = 4,
                            dateCreated = new DateTime(2023, 11, 8, 22, 9, 35, 641, DateTimeKind.Utc).AddTicks(2596),
                            lastUpdated = new DateTime(2023, 11, 8, 22, 9, 35, 641, DateTimeKind.Utc).AddTicks(2596),
                            name = "Terms"
                        });
                });

            modelBuilder.Entity("Planetos.Data.Models.WordDefinition", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("definition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isApproved")
                        .HasColumnType("bit");

                    b.Property<int>("kindleIndexId")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("kindleIndexId");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("wordDefinitions");
                });

            modelBuilder.Entity("Planetos.Data.Models.Inflection", b =>
                {
                    b.HasOne("Planetos.Data.Models.WordDefinition", null)
                        .WithMany("inflections")
                        .HasForeignKey("wordDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Planetos.Data.Models.WordDefinition", b =>
                {
                    b.HasOne("Planetos.Data.Models.KindleIndex", null)
                        .WithMany("wordDefinitions")
                        .HasForeignKey("kindleIndexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Planetos.Data.Models.KindleIndex", b =>
                {
                    b.Navigation("wordDefinitions");
                });

            modelBuilder.Entity("Planetos.Data.Models.WordDefinition", b =>
                {
                    b.Navigation("inflections");
                });
#pragma warning restore 612, 618
        }
    }
}
