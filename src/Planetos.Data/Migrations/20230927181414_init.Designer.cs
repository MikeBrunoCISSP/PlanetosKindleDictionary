// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planetos.Data;

#nullable disable

namespace Planetos.Data.Migrations
{
    [DbContext(typeof(PlanetosContext))]
    [Migration("20230927181414_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Planetos.Data.Models.Inflection", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("inflectionGroupId")
                        .HasColumnType("int");

                    b.Property<bool>("isExactMatch")
                        .HasColumnType("bit");

                    b.Property<DateTime>("lastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("inflectionGroupId");

                    b.ToTable("inflections");
                });

            modelBuilder.Entity("Planetos.Data.Models.InflectionGroup", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("WordDefinitionid")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("lastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("WordDefinitionid");

                    b.ToTable("inflectionGroups");
                });

            modelBuilder.Entity("Planetos.Data.Models.KindleIndex", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("lastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("indices");
                });

            modelBuilder.Entity("Planetos.Data.Models.WordDefinition", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("KindleIndexid")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("definition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("indexId")
                        .HasColumnType("int");

                    b.Property<bool>("isApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("lastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("KindleIndexid");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("wordDefinitions");
                });

            modelBuilder.Entity("Planetos.Data.Models.Inflection", b =>
                {
                    b.HasOne("Planetos.Data.Models.InflectionGroup", null)
                        .WithMany("inflections")
                        .HasForeignKey("inflectionGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Planetos.Data.Models.InflectionGroup", b =>
                {
                    b.HasOne("Planetos.Data.Models.WordDefinition", null)
                        .WithMany("inflectionGroups")
                        .HasForeignKey("WordDefinitionid");
                });

            modelBuilder.Entity("Planetos.Data.Models.WordDefinition", b =>
                {
                    b.HasOne("Planetos.Data.Models.KindleIndex", null)
                        .WithMany("wordDefinitions")
                        .HasForeignKey("KindleIndexid");
                });

            modelBuilder.Entity("Planetos.Data.Models.InflectionGroup", b =>
                {
                    b.Navigation("inflections");
                });

            modelBuilder.Entity("Planetos.Data.Models.KindleIndex", b =>
                {
                    b.Navigation("wordDefinitions");
                });

            modelBuilder.Entity("Planetos.Data.Models.WordDefinition", b =>
                {
                    b.Navigation("inflectionGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
